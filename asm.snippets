snippet head "NES Header" 
.inesprg $1 ; one (1) bank of program code
.ineschr $2 ; one (1) bank of picture data
.inesmap 0 ; we use mapper 0
.inesmir 1 ; Mirror setting always 1.
endsnippet 

snippet bank "Bank Boilerplate"


.bank 1 ; change to bank 1
.org $FFFA ; start at $FFFA

.dw 0        ; location of NMI Interrupt
.dw Start    ; code to run at reset, we give address of Start label that
; we will eventually put in bank 0
.dw 0        ; location of VBlank Interrupt I think. either way, we don't need
; it right now. 


; Picture data for backgrounds and sprites:
.bank 2 ; change to bank 2
.org $0000 ; start at $0000

.incbin "our.bkg"  ; INClude BINary file that will contain our background pic
; data.
.incbin "our.spr"  ; INClude BINary file that will contain our sprite pic data 
endsnippet

snippet ppu "Setup The PPU"
lda #%00001000 
sta $2000
lda #%00011110 
sta $2001 ; PPU not to influence the pallete toward any color
endsnippet 

snippet test "Blink Test"
.segment "HEADER"
    .byte "NES"
    .byte $1a
    .byte $02
    .byte $01
    .byte %00000000
    .byte $00
    .byte $00
    .byte $00
    .byte $00
    .byte $00,$00,$00,$00,$00

.segment "STARTUP"
.segment "ZEROPAGE"
flag: .res 1
counter: .res 1
.segment "CODE"

WAITVBLANK:
:
    BIT $2002
    BPL :-
    RTS

RESET:
  SEI          ; disable IRQs
  CLD          ; disable decimal mode
  LDX #$40
  STX $4017    ; disable APU frame IRQ
  LDX #$FF
  TXS          ; Set up stack
  INX          ; now X = 0
  STX $2000    ; disable NMI
  STX $2001    ; disable rendering
  STX $4010    ; disable DMC IRQs

  JSR WAITVBLANK

clrmem:
  LDA #$00
  STA $0000, x
  STA $0100, x
  STA $0200, x
  STA $0400, x
  STA $0500, x
  STA $0600, x
  STA $0700, x
  LDA #$FE
  STA $0300, x
  INX
  BNE clrmem

  LDA #%10001000
  STA flag
   
  JSR WAITVBLANK

  LDA #%00000000
  STA counter
  STA $2001
  LDA #%10001000
  STA $2000
  LDA #$3F
  STA $2006
  LDA #$00
  STA $2006
  STA $2007
  CLI
Forever:
  JMP Forever  
  
VBLANK:
  INC counter
  LDA counter
  CMP #$3C
  BNE SkipColorChange
  LDA flag
  EOR #%10000000
  STA flag
  STA $2001
  LDA #$00
  STA counter
 SkipColorChange:
  RTI

.segment "VECTORS"
    .word VBLANK
    .word RESET
    .word 0

.segment "CHARS"  
  
endsnippet 
